@import './sap/_sap.theme.scss';
@import './base.scss';

html {
    --comp-gap: min(var(--g4), 1.5%);
}

@keyframes box-wipe-enter {
    0% {
        clip-path: inset(25% 100% 25% -50%);
    }

    50% {
        clip-path: inset(25% 0% 25% 50%);
    }

    100% {
        clip-path: inset(0);
    }
}

@keyframes box-wipe-leave {
    0% {
        clip-path: inset(0);
    }

    50% {
        clip-path: inset(25% 50% 25% 0%);
    }

    100% {
        clip-path: inset(25% -50% 25% 90%);
    }
}

.box-wipe-enter-active {
    animation: 1s box-wipe-enter;
}

.box-wipe-leave-active {
    animation: 1s box-wipe-leave;
}

@keyframes down-enter {
    0% {
        clip-path: inset(0 0 100% 0);
    }

    100% {
        clip-path: inset(0);
    }
}

@keyframes down-leave {
    0% {
        clip-path: inset(0);
    }

    100% {
        clip-path: inset(100% 0 0 0);
    }
}


@keyframes down-enter {
    0% {
        clip-path: inset(0 0 100% 0);
    }

    100% {
        clip-path: inset(0);
    }
}

@keyframes down-leave {
    0% {
        clip-path: inset(0);
    }

    100% {
        clip-path: inset(100% 0 0 0);
    }
}

.page-sap {
    --item-width: #{$screen-xs-min};

    @media screen and (max-width: $screen-xs-max) {
        --item-width: 250px;
    }

    @media screen and (min-width: $screen-sm-min) and (max-width: $screen-sm-max) {
        --item-width: 280px;
    }

    @media screen and (min-width: $screen-md-min) and (max-width: $screen-md-max) {
        --item-width: 300px;
    }

    @media screen and (min-width: $screen-lg-min) {
        --item-width: 360px;
    }

    --main-size: var(--item-width);
    --header-height: var(--comp-size-3);
    --breadcrumb-height: var(--comp-size-3);
    display: grid;
    height: 100%;
    width: 100%;
    transition: grid-template 300ms 150ms;
    @include hidden-scrollbar();
    overflow: hidden;

    .header {
        grid-area: header;
    }

    .footer {
        display: none;
        grid-area: footer;
    }

    .breadcrumb {
        grid-area: breadcrumb;
    }

    .view {
        grid-area: vision;
    }

    .result {
        grid-area: main;
    }

    @media screen and (orientation:portrait) {
        --main-size: var(--item-height);
        grid-template-rows: var(--header-height) var(--breadcrumb-height) 1fr var(--main-size);
        grid-template-columns: 1fr;
        grid-template-areas:
            "header"
            "breadcrumb"
            "vision"
            "main";
    }

    @media screen and (orientation:landscape) {
        --main-size: var(--item-width);
        grid-template-rows: var(--header-height) var(--breadcrumb-height) 1fr;
        grid-template-columns: 1fr var(--main-size);
        grid-template-areas:
            "header header"
            "breadcrumb breadcrumb"
            "vision main";
    }

    @media (orientation:landscape) and (max-width: $screen-md-max) {}

    @media (orientation:landscape) and (min-width: $screen-lg-min) {
        --main-size: calc(var(--item-width) * 2 + var(--g2));
    }
}


.page {
    width: 100%;
    height: calc(100dvh - var(--comp-size-3) * 2);

    @supports not (height: 100dvh) {
        height: 100vh;
    }

    display: grid;
    gap: var(--g0);

    @media screen and (orientation:portrait) {
        grid-template-rows: minmax(50%, 100%) var(--item-height);
        grid-template-columns: 100%;
    }

    @media (orientation:landscape) and (max-width: $screen-md-max) {
        grid-template-columns: minmax(50%, 100%) var(--item-width);
        grid-template-rows: 100%;
    }

    @media (orientation:landscape) and (min-width: $screen-lg-min) {
        grid-template-columns: minmax(50%, 100%) calc(var(--item-width) * 2);
    }
}

.view {
    position: relative;

    .view-content {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        overflow: auto;
        @include hidden-scrollbar();

        >* {
            margin: var(--g2);
        }

    }

}

.filter {
    display: flex;
    gap: var(--g1);
    align-items: center;

    >* {
        flex-shrink: 0;
    }

    overflow-x: auto;
    @include scroll-smooth();
    @include snap();
    @include hidden-scrollbar();
}

.img-bg {
    display: block;
    width: 100%;
    height: 100%;
    cursor: pointer;

    @media screen and (orientation:portrait) {}

    @media screen and (orientation:landscape) {}

    img {
        animation: 1s box-wipe-enter;
        animation-fill-mode: backwards;
        // clip-path: circle(5% at center);
    }

}

.result {
    position: relative;
    z-index: 2;
    @include hidden-scrollbar();
    //set padding min 8px max 5vw
    padding: var(--comp-gap);

    gap: var(--comp-gap);

    .item {
        cursor: pointer;
        height: var(--item-height);
    }

    article {
        --article-gap: min(var(--g2), 3%);
        border-radius: 8px;
        box-shadow: 0 0 0 1px var(--color-bg-l1);
        display: flex;
        flex-direction: column;
        height: 100%;
        width: 100%;
        overflow: hidden;
        gap: var(--g2);
        padding-bottom: var(--g2);

        >figure {
            width: 100%;
            padding-top: 65%;
            height: 0;
            order: 1;
            position: relative;
            overflow: hidden;

            >figcaption {
                position: absolute;
                font-size: var(--font-size-7);
                top: 0;
                right: 0;
                z-index: 2;
                color: var(--color-bg);
                padding: var(--g0);
                background-color: rgba(0, 0, 0, 0.5);
                border-radius: 0 0 0 4px;
            }

            >img {
                height: 100%;
                width: 100%;
                position: absolute;
                top: 0;
                left: 0;
                object-fit: cover;
            }
        }

        >a {
            order: 3;
            padding: 0 var(--article-gap);

            address {
                font-size: var(--font-size-6);
                @include singleline();
            }
        }



        >ul {

            flex-shrink: 0;
            order: 2;
            padding: 0 var(--article-gap);
            font-weight: var(--font-weight-medium);
            display: flex;
            gap: var(--g2) var(--article-gap);
            align-items: baseline;
            flex-wrap: wrap;
            height: 1.2rem;
            overflow: hidden;

            >li {
                white-space: nowrap;

                b {
                    font-size: var(--font-size-4);
                    font-weight: var(--font-weight-bold);
                }

                span {
                    font-size: var(--font-size-5);
                    font-weight: var(--font-weight-medium);
                }

                abbr {
                    font-size: var(--font-size-6);
                    color: var(--color-l1)
                }
            }
        }
    }

    @media screen and (orientation:portrait) {
        display: flex;
        overflow-x: auto;
        // backdrop-filter: blur(20px);
        @include scroll-smooth();
        @include snap();

        >* {
            flex-shrink: 0;
        }
    }

    @media screen and (orientation:landscape) {
        display: grid;
        overflow-y: auto;
        // backdrop-filter: blur(20px);

        >* {
            flex-shrink: 0;
        }
    }

    @media (orientation:landscape) and (max-width: $screen-md-max) {
        grid-template-columns: 1fr;
    }

    @media (orientation:landscape) and (min-width: $screen-lg-min) {
        grid-template-columns: minmax(0%, 50%) minmax(0%, 50%);
    }
}

.view-detail {
    .img-bg {
        img {
            pointer-events: none;
            animation: 1s box-wipe-leave;
            animation-fill-mode: forwards;
        }
    }
}

.view-grid {
    &.page-sap {
        height: auto;
        overflow-y: auto;

        @media screen and (orientation:portrait) {
            // --main-size: var(--item-height);
            // grid-template-rows: var(--header-height) var(--breadcrumb-height) 1fr var(--main-size);
            // grid-template-columns: 1fr;
            grid-template-areas:
                "header"
                "breadcrumb"
                "main"
                "main"
                "footer";
        }

        @media screen and (orientation:landscape) {
            grid-template-areas:
                "header header"
                "breadcrumb breadcrumb"
                "main main"
                "footer footer";
        }

        .footer {
            display: block;
        }
    }

    .result {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(var(--item-width), 1fr));

        .item {
            width: 100%;
        }
    }
}